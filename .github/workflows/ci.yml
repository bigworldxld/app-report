name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # 每30分钟执行一次
    - cron: '*/30 * * * *'
  # 允许手动触发
  workflow_dispatch:
    inputs:
      setup_appium:
        description: 'Setup Appium Environment'
        required: true
        default: false
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'npm'

    # 仅在手动触发且选择安装 Appium 时执行
    - name: Setup Java
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.setup_appium }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 安装 Android SDK
    - name: Setup Android SDK
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.setup_appium }}
      run: |
        # 下载并安装 Command Line Tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip commandlinetools-linux-9477386_latest.zip
        sudo mkdir -p /usr/local/lib/android/sdk/cmdline-tools/
        sudo mv cmdline-tools /usr/local/lib/android/sdk/cmdline-tools/latest

        # 设置环境变量
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
        export PATH=$PATH:$ANDROID_HOME/platform-tools

        # 接受许可
        yes | sdkmanager --licenses

        # 安装必要的包
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

    # 安装 Appium 和依赖
    - name: Setup Appium Environment
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.setup_appium }}
      run: |
        # 安装基础工具
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          curl \
          git \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          pkg-config \
          python3-pip \
          wget

        # 设置 ANDROID_HOME 环境变量
        echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        echo "/usr/local/lib/android/sdk/platform-tools" >> $GITHUB_PATH
        echo "/usr/local/lib/android/sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH

        # 安装 Appium 和插件
        npm install -g appium@next
        appium driver install uiautomator2
        appium driver install xcuitest
        appium plugin install images
        appium plugin install --source=npm appium-ocr-plugin

        # 验证安装
        appium --version
        appium driver list --installed
        appium plugin list --installed

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build project
      env:
        APPIUM_CONTROL_TOKEN: ${{ secrets.APPIUM_CONTROL_TOKEN }}
      run: |
        # 替换 token 占位符
        sed -i "s|{{ APPIUM_CONTROL_TOKEN }}|${APPIUM_CONTROL_TOKEN}|g" frontend/config.html
        npm run build
        # 将 index.html 复制到根目录
        cp build/frontend/index.html build/frontend/404.html
        cp build/frontend/index.html build/frontend/README.md
        ls -la build/frontend/

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build/frontend'

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      id: deployment
